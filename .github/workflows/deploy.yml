name: Deploy to AWS S3 and CodeDeploy

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: ‚úÖ Ï≤¥ÌÅ¨ÏïÑÏõÉ source code.
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è ${{ matrix.node-version }} Î≤ÑÏ†ÑÏùò ÎÖ∏ÎìúÎ°ú ÏÑ∏ÌåÖÌï©ÎãàÎã§.
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: üßπ Remove node_modules and package-lock.json
        working-directory: ./
        run: |
          rm -rf node_modules
          rm -f package-lock.json

      - name: .env setting
        run: |
          echo "REST_API_KEY=${{ secrets.REST_API_KEY }}" >> .env
          echo "REDIRECT_URI=${{ secrets.REDIRECT_URI }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env

      - name: ‚ú® Ìå®ÌÇ§ÏßÄ ÏÑ§Ïπò
        working-directory: ./
        run: npm install

      - name: üì¶ ÎπåÎìúÌïú ÏΩîÎìúÎ•º ÏïïÏ∂ï
        run: zip -r seni.zip ./src ./public ./scripts ./appspec.yml ./ecosystem.config.js ./.env ./package.json

      - name: üåé AWSÏóê Ï†ëÏÜç
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY_ID }}
          aws-region: ap-northeast-2

      - name: ü¶ñ S3Ïóê ÏïïÏ∂ïÎêú ÏÑúÎ≤Ñ ÏΩîÎìúÎ•º ÏóÖÎ°úÎìú
        run: aws s3 cp --region ap-northeast-2 ./seni.zip s3://seninanum-be/deploy/

      - name: üõë Í∏∞Ï°¥ ÌôúÏÑ±ÌôîÎêú Î∞∞Ìè¨ Ï§ëÏßÄ
        id: stop-deployment
        run: |
          ACTIVE_DEPLOYMENT_ID=$(aws deploy list-deployments --application-name seninanum-be --deployment-group-name dev --include-only-statuses Created Queued InProgress --query "deployments[0]" --output text)
          if [ "$ACTIVE_DEPLOYMENT_ID" != "None" ]; then
            echo "Stopping active deployment: $ACTIVE_DEPLOYMENT_ID"
            aws deploy stop-deployment --deployment-id $ACTIVE_DEPLOYMENT_ID --auto-rollback-enabled
          else
            echo "No active deployments to stop."
          fi

      - name: üöÄ AWS CodeDeployÎ°ú Î∞∞Ìè¨Î•º ÏãúÏûë
        id: deploy
        run: |
          DEPLOYMENT_ID=$(aws deploy create-deployment \
            --application-name seninanum-be \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --deployment-group-name dev \
            --s3-location bucket=seninanum-be,bundleType=zip,key=deploy/seni.zip \
            --query "deploymentId" --output text)
          echo "deployment_id=$DEPLOYMENT_ID" >> $GITHUB_ENV

      - name: ‚è≤Ô∏è Î∞∞Ìè¨ ÏÉÅÌÉú ÌôïÏù∏
        id: check-deployment
        run: |
          DEPLOYMENT_ID=${{ steps.deploy.outputs.deployment_id }}
          while true; do
            STATUS=$(aws deploy get-deployment --deployment-id $DEPLOYMENT_ID --query "deploymentInfo.status" --output text)
            if [ "$STATUS" == "Succeeded" ]; then
              echo "Deployment succeeded!"
              exit 0
            elif [ "$STATUS" == "Failed" ] || [ "$STATUS" == "Stopped" ]; then
              echo "Deployment failed with status: $STATUS"
              exit 1
            else
              echo "Current deployment status: $STATUS"
              sleep 30
            fi
          done
